server:
  port: 8086


spring:
  datasource:
    password: tOf4s34_2
    username: root
    url: jdbc:mysql://mysqldbrs:3306/resource_service?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
    platform: mysql
    initialization-mode: always
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  rabbitmq:
    host: rabbitmq
  cloud:
    config:
      enabled: false
    service-registry:
      auto-registration:
        enabled: true
  application:
    name: resourceservice

eureka:
  client:
    enabled: true
    serviceUrl:
      registerWithEureka: true
      defaultZone: http://eurekaservice:8761/eureka/
    registryFetchIntervalSeconds: 500
  instance:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
    leaseRenewalIntervalInSeconds: 1000

resilience4j.circuitbreaker:
  instances:
    circuitBreaker:
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 2
      slidingWindowType: COUNT_BASED
      minimumNumberOfCalls: 4
      waitDurationInOpenState: 20s
      failureRateThreshold: 50

logging:
  file:
    name: /log/resource-service.log
  level:
    com:
      netflix:
        eureka: ERROR
        discovery: ERROR

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true